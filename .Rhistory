read.table("C:/Users/pascalh/Documents/Britta")
read.table("C:/Users/pascalh/Documents/Britta/MHC.txt")
data <- read.table("C:/Users/pascalh/Documents/Britta/MHC.txt")
names(data)
data <- read.table("C:/Users/pascalh/Documents/Britta/MHC.txt", header=T)
names(data)
model1 <- glm(data$total_variants ~ data$seq_effort, poisson)
plot(model1)
plot(data$total_variants ~ data$seq_effort)
summary(model1)
*number of unique MHC variants vs. total number of MHC variants
#number of unique MHC variants vs. total number of MHC variants
model1 <- glm(data$unique_variants ~ data$total_variants, poisson)
plot(model1)
plot(data$unique_variants ~ data$total_variants)
summary(model1)
#number of unique MHC variants vs. total number of MHC variants
model1 <- glm(data$unique_variants ~ data$total_variants, poisson)
#plot(model1)
plot(data$unique_variants ~ data$total_variants)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$total_variants ~ data$seq_effort, poisson)
#plot(model1)
plot(data$total_variants ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$unique_variants ~ data$seq_effort, poisson)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
model1 <- glm(data$unique_variants ~ data$tribe + data$seq_effort, poisson)
names(data)
model1 <- glm(data$unique_variants ~ data$Tribe + data$seq_effort, poisson)
#plot(model1)
plot(data$unique_variants ~ data$Tribe)
summary(model1)
aov(model1, type=2)
Anova(model1, type=2)
?Anova
??Anova
install.packages('car')
library(car)
model1 <- glm(data$unique_variants ~ data$Tribe + data$seq_effort, poisson)
#plot(model1)
plot(data$unique_variants ~ data$Tribe)
Anova(model1, type=2)
model1 <- glm(data$unique_variants ~ data$Tribe + data$seq_effort, poisson)
plot(model1)
model1 <- glm(data$seq_effort ~ data$Tribe, poisson)
plot(model1)
plot(data$seq_effort ~ data$Tribe)
Anova(model1, type=2)
model1 <- glm(data$unique_variants ~ data$Tribe + data$seq_effort, poisson)
plot(data$unique_variants ~ data$Tribe)
Anova(model1, type=2)
res <- resid(model1)
plot(res ~ data$Tribe)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$unique_variants ~ data$seq_effort, poisson)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
res <- resid(model1)
plot(res ~ data$Tribe)
plot(data$unique_variants ~ data$Tribe)
#number of MHC variants vs. nr. of individuals
model1 <- glm(data$unique_variants ~ data$ind_MHC, poisson)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
#plot(model1)
plot(data$unique_variants ~ data$ind_MHC)
summary(model1)
#number of genotyped individuals vs. sequencing effort
model1 <- glm(data$ind_seq ~ data$seq_effort, poisson)
#plot(model1)
plot(data$ind_seq ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$unique_variants ~ data$total_variants + data$ind_MHC, poisson)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
res <- resid(model1)
plot(res ~ data$Tribe)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$unique_variants ~ data$total_variants + data$ind_MHC, poisson)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
names(data)
#number of MHC variants vs. sequencing effort
model1 <- glm(data$MHC_dist ~ data$total_variants + data$ind_MHC, poisson)
#number of MHC variants vs. sequencing effort
model1 <- lm(data$MHC_dist ~ data$total_variants + data$ind_MHC)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
#plot(model1)
plot(data$MHC_dist ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- lm(data$MHC_dist ~ data$ind_MHC)
#plot(model1)
plot(data$MHC_dist ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- lm(data$MHC_dist ~ data$total_variants)
#plot(model1)
plot(data$MHC_dist ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- lm(data$MHC_dist ~ data$unique_variants)
#plot(model1)
plot(data$MHC_dist ~ data$seq_effort)
summary(model1)
#number of MHC variants vs. sequencing effort
model1 <- lm(data$MHC_dist ~ data$seq_effort)
#plot(model1)
plot(data$MHC_dist ~ data$seq_effort)
summary(model1)
model1 <- lm(data$MHC_dist ~ data$Tribe)
plot(model1)
plot(data$MHC_dist ~ data$Tribe)
Anova(model1, type=2)
pairwise.table(c(data$total_variants, data$unique_variants, data$ind_variants, data$ind_seq, data$seq_effort))
?pairwise.table
?pairs
pairs(c(data$total_variants, data$unique_variants, data$ind_variants, data$ind_seq, data$seq_effort))
pairs(cbind(data$total_variants, data$unique_variants, data$ind_variants, data$ind_seq, data$seq_effort))
pairs(cbind(data$total_variants, data$unique_variants, data$ind_variants, data$ind_seq, data$seq_effort), c('total_variants', 'unique_variants', 'ind_variants', 'ind_seq', 'seq_effort'))
names(data)
pairs(cbind(data$total_variants, data$unique_variants, data$ind_variants, data$ind_seq, data$seq_effort, data$MHC_dist), c('total_variants', 'unique_variants', 'ind_variants', 'ind_seq', 'seq_effort', 'MHC_dist'))
#number of MHC variants vs. sequencing effort
model1 <- lm(data$unique_variants ~ data$seq_effort)
#plot(model1)
plot(data$unique_variants ~ data$seq_effort)
summary(model1)
res <- resid(model1)
plot(res ~ data$Tribe)
model1 <- lm(data$MHC_dist ~ data$Tribe)
plot(model1)
plot(data$MHC_dist ~ data$Tribe)
Anova(model1, type=2)
#number of unique MHC variants vs. total number of MHC variants
model1 <- glm(data$unique_variants ~ data$total_variants, poisson)
#plot(model1)
plot(data$unique_variants ~ data$total_variants)
summary(model1)
model1 <- lm(data$unique_variants ~ data$total_variants)
#plot(model1)
plot(data$unique_variants ~ data$total_variants)
summary(model1)
#number of unique MHC variants vs. total number of MHC variants
model1 <- glm(data$unique_variants ~ data$MHC_reads, poisson)
#plot(model1)
plot(data$unique_variants ~ data$total_variants)
#plot(model1)
plot(data$unique_variants ~ data$MHC_reads)
summary(model1)
model1 <- lm(data$unique_variants ~ data$MHC_reads)
#plot(model1)
plot(data$unique_variants ~ data$MHC_reads)
summary(model1)
model1 <- lm(log(data$unique_variants) ~ data$MHC_reads)
#plot(model1)
plot(data$unique_variants ~ data$MHC_reads)
summary(model1)
#plot(model1)
plot(log(data$unique_variants) ~ data$MHC_reads)
summary(model1)
#plot(model1)
plot(sqrt(data$unique_variants) ~ data$MHC_reads)
#plot(model1)
plot(exp(data$unique_variants) ~ data$MHC_reads)
summary(model1)
#plot(model1)
plot(log(data$unique_variants) ~ log(data$MHC_reads))
model1 <- lm(log(data$unique_variants) ~ log(data$MHC_reads))
#plot(model1)
plot(log(data$unique_variants) ~ log(data$MHC_reads))
summary(model1)
kruskal.test(data$MHC_dist ~ data$Tribe)
library(SNFtool)
data <- read.table("C:/Users/pascalh/Desktop/VMSD.txt", header=T)
pairwise.table(data)
pairwise(data)
pairs(data)
rcorr(as.matrix(data))
cor(data)
cor <- cor(data)
rowSums(cor)
average(cor)
avg(cor)
mean(cor)
rowMeans(cor)
# install packages
install.packages('LEA')
# install packages
install.packages('LEA')
# install packages
install.packages('LEA')
library(sf)
package("sf")
install.packages("sf")
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
install.packages("spDataLarge")
library(tmap)
install.packages("tmap")
library(tmap)
tm_shape(nz) +
tm_borders()
tm_shape(br) +
tm_borders()
?tm_shape
map_nz +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(nz) +
tm_borders()
tm_shape(nz) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(bolivia) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(hawaii) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(BO) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(NLD) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(BE) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(be) +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(World, bbox = "India") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
data(World)
tm_shape(World, bbox = "India") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_rivers() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers) +
tm_lines(col="dodgerblue3") +
tm_shape(World) +
tm_fill() +
tm_shape(rivers) +
tm_lines(col="dodgerblue3") +
tm_add_legend(type="line", col="dodgerblue3", title="World map") +
tm_format_World()
tm_shape("World", bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers) +
tm_lines(col="dodgerblue3") +
tm_shape(World) +
tm_fill() +
tm_shape(rivers) +
tm_lines(col="dodgerblue3") +
tm_add_legend(type="line", col="dodgerblue3", title="World map") +
tm_format_World()
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers, bbox = "Bolvia") +
tm_lines(col="dodgerblue3")
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers, bbox = "Bolivia") +
tm_lines(col="dodgerblue3")
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers, bbox = "Bolivia") +
tm_lines(col="dodgerblue3")
tm_shape(World) +
tm_fill() +
tm_shape(rivers) +
tm_lines(col="dodgerblue3") +
tm_add_legend(type="line", col="dodgerblue3", title="World map") +
tm_format_World()
tm_shape(World) +
tm_fill()
tm_shape(rivers) +
tm_lines(col="dodgerblue3")
tm_shape(World) +
tm_fill() +
tm_shape(rivers) +
tm_lines(col="dodgerblue3")
data(World, rivers)
tm_shape(World, bbox = "Bolivia") +
tm_borders() +
tm_compass(type = "8star", position = c("left", "top")) +
tm_scale_bar(breaks = c(0, 100, 200), size = 1) +
tm_shape(rivers, bbox = "Bolivia") +
tm_lines(col="dodgerblue3")
tm_shape(nz)
install.packages("tmaptools")
install.packages("tmaptools")
library(tmaptools)
bo_rivers <- read_shape("C:/Users/pascalh/Downloads/BOL_water_areas_dcw.shp")
tm_shape(bo_rivers)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)
tm_shape(bo_rivers)
tm_shape(bo_rivers) +
tm_lines(col="dodgerblue3")
tm_shape(bo_rivers) +
tm_polygons(col="dodgerblue3")
bo_rivers <- read_shape("C:/Users/pascalh/Downloads/rios_menores.shp")
tm_shape(bo_rivers) +
tm_polygons(col="dodgerblue3")
tm_shape(bo_rivers) +
tm_lines(col="dodgerblue3")
bo_region = st_bbox(c(xmin = 1340000, xmax = 1450000,
ymin = -6130000, ymax = -6210000),
crs = st_crs(bo_rivers)) %>%
st_as_sfc()
tm_shape(bo_rivers, bbox = bo_region) +
tm_lines(col="dodgerblue3")
bo_region = st_bbox(c(xmin = 6130000, xmax = 6210000,
ymin = 1350000, ymax = 1450000),
crs = st_crs(bo_rivers)) %>%
st_as_sfc()
tm_shape(bo_rivers, bbox = bo_region) +
tm_lines(col="dodgerblue3")
bo_region = st_bbox(c(xmin = -13, xmax = -14,
ymin = -65, ymax = -64),
crs = st_crs(bo_rivers)) %>%
st_as_sfc()
tm_shape(bo_rivers, bbox = bo_region) +
tm_lines(col="dodgerblue3")
bo_region = st_bbox(c(xmin = -65, xmax = -64,
ymin = -14, ymax = -13),
crs = st_crs(bo_rivers)) %>%
st_as_sfc()
tm_shape(bo_rivers, bbox = bo_region) +
tm_lines(col="dodgerblue3")
bo_minor_rivers <- read_shape("C:/Users/pascalh/Downloads/rios_menores.shp")
bo_major_rivers <- read_shape("C:/Users/pascalh/Downloads/BOL_water_areas_dcw.shp")
bo_minor_rivers <- read_shape("C:/Users/pascalh/Downloads/rios_menores.shp")
bo_major_rivers <- read_shape("C:/Users/pascalh/Downloads/BOL_water_areas_dcw.shp")
bo_region_minor = st_bbox(c(xmin = -65, xmax = -64,
ymin = -14, ymax = -13),
crs = st_crs(bo_minor_rivers)) %>%
st_as_sfc()
bo_region_major = st_bbox(c(xmin = -65, xmax = -64,
ymin = -14, ymax = -13),
crs = st_crs(bo_major_rivers)) %>%
st_as_sfc()
tm_shape(bo_major_rivers, bbox = bo_region_major) +
tm_polygons(col="dodgerblue3") +
tm_shape(bo_minor_rivers, bbox = bo_region_major) +
tm_lines(col="dodgerblue3")
tm_shape(bo_major_rivers, bbox = bo_region_major, projection="eck4") +
tm_polygons(col="dodgerblue3") +
tm_shape(bo_minor_rivers, bbox = bo_region_major, projection="eck4") +
tm_lines(col="dodgerblue3")
tm_shape(bo_major_rivers, bbox = bo_region_major, projection="longlat") +
tm_polygons(col="dodgerblue3")
tm_shape(bo_minor_rivers, bbox = bo_region_major, projection="longlat") +
tm_lines(col="dodgerblue3")
tm_shape(bo_major_rivers, bbox = bo_region_major, projection="longlat") +
tm_polygons(col="dodgerblue3") +
tm_shape(bo_minor_rivers, bbox = bo_region_major, projection="longlat") +
tm_lines(col="dodgerblue3")
bo_region_minor = st_bbox(c(xmin = -67, xmax = -62,
ymin = -16, ymax = -11),
crs = st_crs(bo_minor_rivers)) %>%
st_as_sfc()
bo_region_major = st_bbox(c(xmin = -67, xmax = -62,
ymin = -16, ymax = -11),
crs = st_crs(bo_major_rivers)) %>%
st_as_sfc()
tm_shape(bo_major_rivers, bbox = bo_region_major, projection="longlat") +
tm_polygons(col="dodgerblue3") +
tm_shape(bo_minor_rivers, bbox = bo_region_major, projection="longlat") +
tm_lines(col="dodgerblue3")
?table
library(vegan)
install.packages("vegan")
library(vegan)
library(ggvegan)
install.packages("ggvegan")
install.packages("ggthemes")
install.packages("raster")
library(vegan)
library(ggvegan)
library(ggthemes)
library(raster)
install.packages("ggvegan")
setwd('C:/Users/u0113095/Google Drive/PhD/2 Parasite/2016/Parasite2016_analysis')
ab <- read.csv("abundance.csv", sep=";")
setwd('C:/Users/pascalh/Documents/GitHub/Stickleback-parasites-2016')
ab <- read.csv("abundance.csv", sep=";")
ab <- ab[,-1]
pre <- read.csv("prevalence.csv", sep=';')
spavar <- read.csv("space2.csv", sep=';') #spatial variables
spavar <- spavar[,-1]
spa <- read.csv("space.csv", sep=';')
plot(spa$long ~ spa$lat)
dist <- pointDistance(spa, allpairs = TRUE, lonlat = FALSE)
env <- read.csv("env_max.csv", sep=';')
# Hellinger transformation of the species dataset ####
spe.hel <- decostand(pre,"hellinger") #prevalence or abundance
#### Environmental variables ####
spe.rda <- rda(spe.hel, env)
plot(spe.rda, scaling = 1)
summary(spe.rda)
anova(spe.rda)
anova.cca(spe.rda, step=1000);
RsquareAdj(spe.rda)$adj.r.squared;
RsquareAdj(spe.rda)$r.squared
env_max <- read.csv("env_max.csv", sep=';')
env_point <- read.csv("env_max.csv", sep=';')
env_av <- read.csv("env_av.csv", sep=';')
env_all <- cbind(env_max, env_point, anv_av)
env_all <- cbind(env_max, env_point, env_av)
head(env_all)
cor(env_all)
env_max <- read.csv("env_max.csv", sep=';')
env_av <- read.csv("env_av.csv", sep=';') #edit_PH
env_all <- cbind(env_max, env_av) #edit_PH
cor(env_all)
env_select <- (env_all[(4,6:8,10:12),])
env_select <- (env_all[c(4,6:8,10:12),])
# Hellinger transformation of the species dataset ####
spe.hel <- decostand(pre,"hellinger") #prevalence or abundance
#### Environmental variables ####
spe.rda <- rda(spe.hel, env)
plot(spe.rda, scaling = 1)
summary(spe.rda)
anova(spe.rda)
anova.cca(spe.rda, step=1000);
RsquareAdj(spe.rda)$adj.r.squared;
RsquareAdj(spe.rda)$r.squared
mod0 <- rda(spe.hel ~ 1, env)  # Model with intercept only
mod1 <- rda(spe.hel ~ ., env)  # Model with all explanatory variables
step.res <- ordiR2step(mod0, mod1, direction = "backward",perm.max = 200)
step.res$anova  # Summary table
g <- autoplot(spe.rda, arrows = FALSE, geom = c("point", "text")) + geom_text(size = 10) + theme_few() + xlim(c(-0.7,1.2)) + scale_color_manual(values = c("black","#009999","#006666"))
g + geom_hline(yintercept = 0, linetype="dotted") + geom_vline(xintercept = 0, linetype="dotted")
ggsave("environmentspecies.png", units="in", width=10, height=10, dpi=300)
library(vegan)
library(ggvegan)
library(ggthemes)
library(raster)
devtools::install_github("gavinsimpson/ggvegan")
install.packages("devtools")
devtools::install_github("gavinsimpson/ggvegan")
remove.packages("rlang")
devtools::install_github("gavinsimpson/ggvegan")
