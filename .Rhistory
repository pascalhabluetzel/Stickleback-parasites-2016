p
matrix[,i] <- rnorm(100, mean=i, sd=10)
for(i in 1:100){
matrix[,i] <- rnorm(100, mean=i, sd=10)
}
head(matrix)
plot(matrix[1,]~c(1:100))
p <- summary(lm(matrix[1,]~c(1:100)))
p <- model$adj.r.squared
model <- summary(lm(matrix[1,]~c(1:100)))
p <- model$adj.r.squared
R1 <- 1:100
p1 <- 1:100
View(model)
View(model)
for(i in 1:100{
R1[i] <- model$adj.r.squared
R1 <- 1:100
for(i in 1:100{
R1[i] <- model$adj.r.squared
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
}
hist(R1)
for(i in c(5,15,25,25,35,45,55,65,75,85,95)){
matrix[,i] <- rnorm(100, mean=i, sd=10)
}
matrix2 <- matrix(NA, 100,10)
for(i in c(5,15,25,35,45,55,65,75,85,95)){
matrix2[,i] <- rnorm(100, mean=i, sd=10)
}
matrix2 <- matrix(NA, 10,100)
for(i in c(5,15,25,35,45,55,65,75,85,95)){
matrix2[,i] <- rnorm(100, mean=i, sd=10)
}
matrix2 <- matrix(NA, 10,100)
matrix2 <- matrix(NA, 100,10)
for(i in c(5,15,25,35,45,55,65,75,85,95)){
matrix2[,i] <- rnorm(100, mean=i, sd=10)
}
matrix2 <- matrix[,c(5,15,25,35,45,55,65,75,85,95)]
matrix2
matrix2 <- matrix[1:10,c(5,15,25,35,45,55,65,75,85,95)]
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
R2 <- 1:100
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(matrix2[i,]~c(5,15,25,35,45,55,65,75,85,95)))
R2[i] <- model$adj.r.squared
}
rep(5,10)
c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))
matrix2
c(matrix2[,1:10])
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))))
R2[i] <- model$adj.r.squared
}
hist(R2)
F1 <- 1:100
F1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
}
hist(F1)
F2 <- 1:100
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
}
hist(R2)
hist(F2)
hist(F1)
hist(F2)
R3 <- 1:100
R3 <- 1:100
F3 <- 1:100
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix3[,1])~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
}
model <- summary(lm(c(matrix3[1])~c(5,15,25,35,45,55,65,75,85,95)))
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix3[1])~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
}
model <- summary(lm(c(matrix3[1,])~c(5,15,25,35,45,55,65,75,85,95)))
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix3[1,])~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
}
model <- summary(lm(as.num(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.num(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
}
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
}
hist(R3)
hist(F3)
hist(R3)
hist(F3)
?summary
P3 <- 1:100
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- anova(model)$'Pr(>F)'[1]
}
P3[i] <- Anova(model)$'Pr(>F)'[1]
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
P3 <- 1:100
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(model)
}
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
}
hist(R3)
hist(F3)
hist(P3)
mean(P3)
R2 <- 1:100
F2 <- 1:100
P2 <- 1:100
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))))
}
hist(R2)
hist(F2)
R3 <- 1:100
F3 <- 1:100
P3 <- 1:100
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
}
hist(R3)
hist(F3)
hist(P3)
hist(P2)
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
}
hist(R2)
hist(F2)
hist(P2)
mean(P2)
mean(P1)
P1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
P1[i] <- lmp(lm(matrix[i,]~c(1:100)))
}
hist(R1)
hist(F1)
hist(P1)
mean(P1)
for(i in 1:100){
matrix[,i] <- rnorm(100, mean=i, sd=50)
}
head(matrix)
plot(matrix[1,]~c(1:100))
R1 <- 1:100
F1 <- 1:100
P1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
P1[i] <- lmp(lm(matrix[i,]~c(1:100)))
}
hist(R1)
hist(F1)
hist(P1)
mean(P1)
R2 <- 1:100
F2 <- 1:100
P2 <- 1:100
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
}
hist(R2)
hist(F2)
hist(P2)
mean(P2)
hist(R2)
hist(R1)
matrix[,i] <- rnorm(100, mean=i, sd=100)
for(i in 1:100){
matrix[,i] <- rnorm(100, mean=i, sd=100)
}
head(matrix)
plot(matrix[1,]~c(1:100))
R1 <- 1:100
F1 <- 1:100
P1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
P1[i] <- lmp(lm(matrix[i,]~c(1:100)))
}
hist(R1)
hist(F1)
hist(P1)
mean(P1)
R2 <- 1:100
F2 <- 1:100
P2 <- 1:100
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
}
hist(R2)
hist(F2)
hist(P2)
mean(P2)
hist(R3)
hist(R2)
hist(R1)
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
}
hist(R3)
matrix[,i] <- rnorm(100, mean=i, sd=50)
for(i in 1:100){
matrix[,i] <- rnorm(100, mean=i, sd=50)
}
head(matrix)
plot(matrix[1,]~c(1:100))
R1 <- 1:100
F1 <- 1:100
P1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
P1[i] <- lmp(lm(matrix[i,]~c(1:100)))
}
hist(R1)
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
}
hist(R2)
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
}
hist(R3)
matrix[,i] <- rnorm(100, mean=i, sd=10)
for(i in 1:100){
matrix[,i] <- rnorm(100, mean=i, sd=10)
}
head(matrix)
plot(matrix[1,]~c(1:100))
R1 <- 1:100
F1 <- 1:100
P1 <- 1:100
for(i in 1:100){
model <- summary(lm(matrix[i,]~c(1:100)))
R1[i] <- model$adj.r.squared
F1[i] <- model$fstatistic[1]
P1[i] <- lmp(lm(matrix[i,]~c(1:100)))
}
hist(R1)
for(i in 1:100){
matrix2 <- matrix[sample(1:100,10),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
R2[i] <- model$adj.r.squared
F2[i] <- model$fstatistic[1]
P2[i] <- lmp(lm(c(matrix2[,1:10])~c(rep(5,10),rep(15,10),rep(25,10),rep(35,10),rep(45,10),rep(55,10),rep(65,10),rep(75,10),rep(85,10),rep(95,10))+c(rep("5",10),rep("15",10),rep("25",10),rep("35",10),rep("45",10),rep("55",10),rep("65",10),rep("75",10),rep("85",10),rep("95",10))))
}
hist(R2)
for(i in 1:100){
matrix3 <- matrix[sample(1:100,1),c(5,15,25,35,45,55,65,75,85,95)]
model <- summary(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
R3[i] <- model$adj.r.squared
F3[i] <- model$fstatistic[1]
P3[i] <- lmp(lm(as.vector(matrix3)~c(5,15,25,35,45,55,65,75,85,95)))
}
hist(R3)
setwd('C:/Users/pascalh/Documents')
# Load data
data <- read.txt("test.txt", sep=';')
# Load data
data <- read.table("test.txt", sep=';')
data
# Load data
data <- read.table("test.txt", sep='/')
data
# Load data
data <- read.table("test.txt", sep='\')
data
# Load data
data <- read.table("test.txt", sep='\')
data
# Load data
data <- read.table("test.txt", sep='\')
data
# Load data
data <- read.table("test.txt")
data
aifgj
i
setwd('C:/Users/pascalh/Documents')
# Load data
data <- read.table("test.txt")
data
y <- prcomp(t(data))
plot(y)
y <- prcomp(t(data))
t(data)
y <- prcomp(t(data[-1,]))
plot(y)
prcomp
?prcomp
y <- prcomp(t(data), scale.=TRUE)
plot(y)
biplot(y)
devtools::install_github("thierrygosselin/assigner")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
devtools::install_github("thierrygosselin/assigner")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
install.packages("glue")
devtools::install_github("thierrygosselin/assigner")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
install.packages("fansi")
devtools::install_github("thierrygosselin/assigner")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
install.packages("ps")
devtools::install_github("thierrygosselin/assigner")
devtools::install_github("thierrygosselin/assigner")
devtools::install_github("thierrygosselin/assigner")
install.packages("backports")
devtools::install_github("thierrygosselin/assigner")
install.packages("xfun")
install.packages("xfun")
devtools::install_github("thierrygosselin/assigner")
devtools::install_github("thierrygosselin/assigner")
install.packages("xfun")
library(xfun)
devtools::install_github("thierrygosselin/assigner")
install.packages("radiator")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
install.packages("radiator")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/assigner")
install.packages("xfun")
install.packages("radiator")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/radiator")
install.packages("fansi")
devtools::install_github("thierrygosselin/radiator")
install.packages("glue")
devtools::install_github("thierrygosselin/radiator")
install.packages("ps")
devtools::install_github("thierrygosselin/radiator")
if (!require("devtools")) install.packages("devtools")
devtools::install_github("thierrygosselin/radiator")
install.packages("fs")
devtools::install_github("thierrygosselin/radiator")
library(radiator)
devtools::install_github("thierrygosselin/radiator")
install.packages("mime")
devtools::install_github("thierrygosselin/radiator")
install.packages("mime")
devtools::install_github("thierrygosselin/radiator")
devtools::install_github("thierrygosselin/radiator")
devtools::install_github("thierrygosselin/radiator")
devtools::install_github("thierrygosselin/radiator")
install.packages("testthat")
devtools::install_github("thierrygosselin/radiator")
install.packages("testthat")
install.packages("testthat")
devtools::install_github("thierrygosselin/radiator")
devtools::install_github("thierrygosselin/assigner")
install.packages("raster")
devtools::install_github("thierrygosselin/assigner")
BiocManager::install("SNPRelate")
library(radiator)
seabass.vcf <- radiator::read_vcf(data = "seabass_w_biallelicSNPs_DP5_minQ20_mac3_mis0.8.recode.vcf",
strata = "seabass.strata.tsv",
parallel.core = 1L,
verbose = FALSE
)
seabass.tidy <- tidy_genomic_data(seabass.vcf)
seabass.hwe <- filter_hwe(
seabass.tidy,
interactive.filter = TRUE,
filter.hwe = TRUE,
strata = NULL,
hw.pop.threshold = 1,
midp.threshold = 3,
filename = NULL,
parallel.core = 1L,
verbose = TRUE
)
seabass.vcf <- radiator::read_vcf(data = "seabass_w_biallelicSNPs_DP5_minQ20_mac3_mis0.8.recode.vcf",
strata = "seabass.strata.tsv",
parallel.core = 1L,
verbose = FALSE
)
rm(list=ls())
library(radiator)
#seabass.vcf <- radiator::read_vcf(data = "seabass_filtered_DPQMACMISSIMAF70MISSI.vcf",
seabass.vcf <- read_vcf(data = "seabass_filtered_AEGBS.vcf",
strata = "seabass.strata.AEGBS.tsv",
parallel.core = 1L,
filter.common.markers = F,
verbose = FALSE
)
#seabass.vcf <- radiator::read_vcf(data = "seabass_filtered_DPQMACMISSIMAF70MISSI.vcf",
seabass.vcf <- read_vcf(data = "seabass_filtered_AEGBS.vcf",
strata = "seabass.strata.AEGBS.tsv",
parallel.core = 1L,
filter.common.markers = F,
verbose = FALSE
)
setwd('C:/Users/pascalh/Documents/GitHub/Stickleback-parasites-2016')
install.packages('dplyr', repos = 'https://cloud.r-project.org')
setwd('C:/Users/pascalh/Documents/GitHub/Stickleback-parasites-2016')
install.packages("dplyr")
library(dyplr)
library.path <- .libPaths()
library("timeseries", lib.loc = library.path)
library(dplyr)
library(dplyr)
install.packages("ellipsis")
install.packages("ellipsis")
library(dplyr)
install.packages("vctrs")
install.packages("vctrs")
library(dplyr)
#install.packages("magrittr")
library(magrittr)
library(dplyr)
env <- read.csv("Environment_R.csv", sep=';')
spavar <- read.csv("space2.csv", sep=';')
spavar_exp <- spavar %>% slice(rep(1:n(), table(as.factor(data2$site))))
