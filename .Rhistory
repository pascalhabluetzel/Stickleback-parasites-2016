coef.model <- coef(bas.model)
pip <- summary(bas.model)
PIP[c(1:12),10] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
#Anguillicola
bas.model <- bas.glm(pa$Ang ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, betaprior=g.prior(100), family=binomial)
coef.model <- coef(bas.model)
pip <- summary(bas.model)
PIP[c(1:12),11] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
#PI
bas.model <- bas.lm(avPI ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
coef.model <- coef(bas.model)
pip <- summary(bas.model)
PIP[c(1:12),12] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
#PI ecto
bas.model <- bas.lm(avPI_ecto ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
coef.model <- coef(bas.model)
pip <- summary(bas.model)
PIP[c(1:12),13] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
#PI endo
bas.model <- bas.lm(avPI_endo ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
coef.model <- coef(bas.model)
pip <- summary(bas.model)
PIP[c(1:12),14] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
x = round(PIP, digits=2)
x[abs(PIP)<0.5] <- ""
x[abs(PIP)>0.5] <- "+"
heatmap.2(PIP[,-c(9,10,11)],
cellnote = x[,-c(9,10,11)],
#main = "Correlation",
notecex=1,
notecol="white",
density.info="none",
trace="none",
margins =c(10,8),
col=redblue(256),
dendrogram="both",
cexRow = 0.7,
cexCol = 0.7,
key.title = "PIP",
lhei = c(1,3),
lwid = c(0.5, 0.5),
#Colv="NA"
)
bas.model <- bas.lm(avcondition ~  T_av + O2_sat_av + Con_av + COD_av + NH4._av + Nt_av +
pool_riffle + meander + netcen + updist,
data=environment2, prior="JZS")
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
#abs(coef.model$postmean)-2*coef.model$postsd > 0
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'condition.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(3:12),1] <- pip[2:11,1]*sign(coef.model$postmean[2:11])
#coef.model$postmean[2:11]
bas.model <- bas.lm(avlength ~ T_av + O2_sat_av + Con_av + COD_av + NH4._av + Nt_av +
pool_riffle + meander + netcen + updist,
data=environment2, prior="JZS")
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
#abs(coef.model$postmean)-2*coef.model$postsd > 0
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'length.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(3:12),1] <- pip[2:11,1]*sign(coef.model$postmean[2:11])
#coef.model$postmean[2:11]
# Prediction plot
newdata = as.data.frame(cbind(rep(mean(environment2$T_av), 37),
rep(mean(environment2$O2_sat_av), 37),
rep(mean(environment2$Con_av), 37),
rep(mean(environment2$COD_av), 37),
rep(mean(environment2$NH4._av), 37),
rep(mean(environment2$Nt_av), 37),
rep(1, 37),
rep(1, 37),
rep(mean(netcen), 37),
rep(mean(updist), 37)))
colnames(newdata) <- c("T_av", "O2_sat_av", "Con_av", "COD_av", "NH4._av", "Nt_av", "pool_riffle", "meander", "netcen", "updist")
newdata[,"pool_riffle"] <- as.factor(newdata[,"pool_riffle"]); newdata[,"meander"] <- as.factor(newdata[,"meander"])
newdata1 <- newdata; newdata1[,"netcen"] <- netcen
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
png(file="figure.png", res=600, width=3000, height=3000)
figure_avlength <- ggplot(environment2, aes(netcen, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=netcen, y=avlength)) +
labs(x=expression("Network peripherality [m]"), y=expression("Average host length [mm]")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
dev.off()
figure_avlength
bas.model <- bas.lm(avab$Gyr ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
# Prediction plot
newdata = as.data.frame(cbind(rep(mean(avlength), 37),
rep(mean(avcondition), 37),
rep(mean(environment2$T_av), 37),
rep(mean(environment2$O2_sat_av), 37),
rep(mean(environment2$Con_av), 37),
rep(mean(environment2$COD_av), 37),
rep(mean(environment2$NH4._av), 37),
rep(mean(environment2$Nt_av), 37),
rep(1, 37),
rep(1, 37),
rep(mean(netcen), 37),
rep(mean(updist), 37)))
colnames(newdata) <- c("avlength", "avcondition", "T_av", "O2_sat_av", "Con_av", "COD_av", "NH4._av", "Nt_av", "pool_riffle", "meander", "netcen", "updist")
newdata[,"pool_riffle"] <- as.factor(newdata[,"pool_riffle"]); newdata[,"meander"] <- as.factor(newdata[,"meander"])
newdata1 <- newdata; newdata1[,"avcondition"] <- avcondition
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(avcondition, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=avcondition, y=avab$Gyr)) +
labs(x=expression("Average host condition"), y=expression("Average Gyrodactylus count")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"COD_av"] <- environment2$COD_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(COD_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=COD_av, y=avab$Gyr)) +
labs(x=expression("COD"), y=expression("Average Gyrodactylus count")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"Nt_av"] <- environment2$Nt_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(Nt_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=Nt_av, y=avab$Gyr)) +
labs(x=expression("Nt"), y=expression("Average Gyrodactylus count")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
bas.model <- bas.lm(medin$Gyr ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.lm(prev$Gyr ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
newdata1 <- newdata; newdata1[,"Con_av"] <- environment2$Con_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(Con_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=Con_av, y=prev$Gyr)) +
labs(x=expression("Conductivity"), y=expression("Gyrodactylus prevalence")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
bas.model <- bas.lm(avab$Tri ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.lm(medin$Tri ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
newdata1 <- newdata; newdata1[,"Con_av"] <- environment2$Con_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(Con_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=Con_av, y=medin$Tri)) +
labs(x=expression("Conductivity"), y=expression("Trichodina median infection intensity")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"COD_av"] <- environment2$COD_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(COD_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=COD_av, y=medin$Tri)) +
labs(x=expression("Conductivity"), y=expression("Trichodina median infection intensity")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
bas.model <- bas.lm(prev$Tri ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
write.table(confint, 'GyroAA.txt', sep="\t")
pip <- summary(bas.model)
PIP[c(1:12),3] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.glm(pa$Glu ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av +
NH4._av + Nt_av + SM_av + pool_riffle + meander +
spavar$netcen + spavar$updist, data=environment2, betaprior=g.prior(100), family=binomial)
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),9] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.glm(pa$Con ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av +
NH4._av + Nt_av + SM_av + pool_riffle + meander +
spavar$netcen + spavar$updist, data=environment2, betaprior=g.prior(100), family=binomial)
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),10] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.glm(pa$Ang ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av +
NH4._av + Nt_av + SM_av + pool_riffle + meander +
spavar$netcen + spavar$updist, data=environment2, betaprior=g.prior(100), family=binomial)
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),11] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
bas.model <- bas.lm(avPI ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),12] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
newdata1 <- newdata; newdata1[,"COD_av"] <- environment2$COD_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(COD_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=COD_av, y=avPI)) +
labs(x=expression("COD"), y=expression("Individual Parasitation Index")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
bas.model <- bas.lm(avPI_ecto ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),13] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
newdata1 <- newdata; newdata1[,"COD_av"] <- environment2$COD_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(COD_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=COD_av, y=avPI_ecto)) +
labs(x=expression("COD"), y=expression("Individual Parasitation Index (only ectoparasites)")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"Nt_av"] <- environment2$Nt_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(Nt_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=Nt_av, y=avPI_ecto)) +
labs(x=expression("Total nitrogen"), y=expression("Individual Parasitation Index (only ectoparasites)")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"Con_av"] <- environment2$Con_av
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(Con_av, BMA$fit)) +
theme_bw() +
geom_line(color="red", size=1) +
geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=Con_av, y=avPI)) +
labs(x=expression("Conductivity"), y=expression("Individual Parasitation Index (only ectoparasites)")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
newdata1 <- newdata; newdata1[,"meander"] <- environment2$meander
BMA <- predict(bas.model, newdata = newdata1, estimator = "BMA", se.fit=TRUE)
ggplot(environment2, aes(meander, BMA$fit)) +
theme_bw() +
#geom_line(color="red", size=1) +
#geom_ribbon(aes(ymin = (BMA$fit-BMA$se.bma.fit), ymax = (BMA$fit+BMA$se.bma.fit)), alpha = .1) +
geom_point(data = environment2, aes(x=meander, y=avPI)) +
geom_boxplot(aes(lower = (BMA$fit-BMA$se.bma.fit), middle = BMA$fit, upper = (BMA$fit+BMA$se.bma.fit))) +
labs(x=expression("Meander"), y=expression("Individual Parasitation Index (only ectoparasites)")) +
theme(axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12)) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
bas.model <- bas.lm(avPI_endo ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2, prior="JZS")
yhat = fitted(bas.model, estimator = "BMA") #these are the fitted values under BMA
r = bas.model$Y - yhat #these are the model residuals
plot(bas.model)
summary(bas.model)
image(bas.model, rotate=F)
coef.model <- coef(bas.model)
abs(coef.model$postmean)-2*coef.model$postsd > 0
confint(coef.model)
plot(confint(coef.model, parm = 2:11))
confint <- confint(coef.model, parm = 2:11)
pip <- summary(bas.model)
PIP[c(1:12),14] <- pip[2:13,1]*sign(coef.model$postmean[2:13])
data$Site <- as.factor(data$site)
levels(data$site) <- levels(as.factor(environment2$Site))
data_m <- merge(data, environment2, by = "Site")
data_all <- na.omit(data_m)
names(data_all)
avcondition <- aggregate(data$SMI, by = list(data[,1]), function(x){mean(x, na.rm =T)})[,2]
avlength <- aggregate(data$length, by = list(data[,1]), function(x){mean(x, na.rm =T)})[,2]
y <- round(cbind(avab$Gyr, avab$Tri, avab$Glu, avab$Con, avab$Ang))
X <- cbind(avcondition,
avlength,
environment2$T_av,
environment2$O2_sat_av,
environment2$Con_av,
environment2$COD_av,
environment2$NH4._av,
environment2$Nt_av,
environment2$netcen,
environment2$updist,
as.numeric(environment2$pool_riffle),
as.numeric(environment2$meander))
colnames(X) <- c("avcondition", "avlength", "T", "O2", "Con", "COD", "NH4", "Nt", "netcen", "updist", "pool_riffle", "meander")
example_mcmc_control <- list(n.burnin = 1000, n.iteration = 10000, n.thin = 1)
testpath <- file.path(tempdir(), "jagsboralmodel.txt")
paramod <- boral(y, X = X,
family = "negative.binomial",
mcmc.control = example_mcmc_control,
model.name = testpath,
lv.control = list(num.lv = 2, type = "independent"),
save.model = TRUE)
plot(paramod)
coefsplot(covname = "avcondition", object = paramod) #Condition
coefsplot(covname = "avlength", object = paramod) #Length
coefsplot(covname = "T", object = paramod) #Temperature
coefsplot(covname = "O2", object = paramod) #Oxygen
coefsplot(covname = "Con", object = paramod) #Conductivity
coefsplot(covname = "COD", object = paramod) #COD
coefsplot(covname = "NH4", object = paramod) #NH4
coefsplot(covname = "Nt", object = paramod) #Nt
coefsplot(covname = "netcen", object = paramod) #netcen
coefsplot(covname = "updist", object = paramod) #updist
coefsplot(covname = "pool_riffle", object = paramod) #poolriffle
coefsplot(covname = "meander", object = paramod) #meander
envcors <- get.enviro.cor(paramod)
rescors <- get.residual.cor(paramod)
corrplot(envcors$sig.cor, type = "lower", diag = FALSE, title = "Correlations due to covariates", mar = c(3,0.5,2,1), tl.srt = 45)
corrplot(rescors$sig.cor, type = "lower", diag = FALSE, title = "Residual correlations", mar = c(3,0.5,2,1), tl.srt = 45)
y <- round(cbind(medin$Gyr, medin$Tri, medin$Glu, medin$Con, medin$Ang))
paramod <- boral(y, X = X,
family = "negative.binomial",
mcmc.control = example_mcmc_control,
model.name = testpath,
lv.control = list(num.lv = 2, type = "independent"),
save.model = TRUE)
plot(paramod)
coefsplot(covname = "avcondition", object = paramod) #Condition
coefsplot(covname = "avlength", object = paramod) #Length
coefsplot(covname = "T", object = paramod) #Temperature
coefsplot(covname = "O2", object = paramod) #Oxygen
coefsplot(covname = "Con", object = paramod) #Conductivity
coefsplot(covname = "COD", object = paramod) #COD
coefsplot(covname = "NH4", object = paramod) #NH4
coefsplot(covname = "Nt", object = paramod) #Nt
coefsplot(covname = "netcen", object = paramod) #netcen
coefsplot(covname = "updist", object = paramod) #updist
coefsplot(covname = "pool_riffle", object = paramod) #poolriffle
coefsplot(covname = "meander", object = paramod) #meander
envcors <- get.enviro.cor(paramod)
rescors <- get.residual.cor(paramod)
corrplot(envcors$sig.cor, type = "lower", diag = FALSE, title = "Correlations due to covariates", mar = c(3,0.5,2,1), tl.srt = 45)
corrplot(rescors$sig.cor, type = "lower", diag = FALSE, title = "Residual correlations", mar = c(3,0.5,2,1), tl.srt = 45)
# Component communities: Bray-Curtis dissimilarities based on Hellinger transformed average abundance data
spe.hel_bray <- vegdist(decostand(avab[,-1], na.rm=T, method="hellinger"), method="bray", na.rm=T)
# Check whether Euclidean and Bray-Curtis distances are comparable
spe.hel_euc <- vegdist(decostand(avab[,-1], na.rm=T, method="hellinger"), method="euc", na.rm=T)
plot(spe.hel_bray, spe.hel_euc)
mantel(spe.hel_bray, spe.hel_euc)
adonis(spe.hel_bray ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2)
summary(adonis)
model_adonis = adonis(spe.hel_bray ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2)
summary(adonis)
model_adonis = adonis(spe.hel_bray ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2)
summary(model_adonis)
model_adonis = adonis(spe.hel_bray ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2)
model_adonis$aov.tab
model_adonis = adonis(meandist_bray ~ avlength + avcondition + T_av + O2_sat_av + Con_av + COD_av
+ NH4._av + Nt_av + pool_riffle + meander + netcen +
updist, data=environment2)
