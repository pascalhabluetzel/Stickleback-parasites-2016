xlab("time") +
ylab("relative growth") +
ggtitle("relative growth in each municipality") +
theme(legend.position = "none")
sevend <- 1:581
for(i in 1:581){
sevend[i] <- mean(table_c[689:695,i+1])
}
sevendm <- 1:581
for(i in 1:581){
sevendm[i] <- mean(table_c[688:694,i+1])
}
sevendmm <- 1:581
for(i in 1:581){
sevendmm[i] <- mean(table_c[683:689,i+1])
}
sevendmmm <- 1:581
for(i in 1:581){
sevendmmm[i] <- mean(table_c[682:688,i+1])
}
plot(density(sevend/sevendm, na.rm=T), xlim=c(0.8,1.4))
plot(density(sevendmm/sevendmmm, na.rm=T), xlim=c(0.8,1.4))
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.TX_DESCR_NL)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-01-24 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases in each municipality") +
theme(legend.position = "none")
mun <- table$data.TX_DESCR_NL == "Londerzeel"
sum(table[mun,][,"Freq"])
ggplot(table[mun,], aes(sort(as.POSIXct(unique(data.DATE))), Freq)) +
geom_point(color="dark grey") +
#geom_path() +
#geom_smooth(span=0.5, color="black") +
#geom_smooth(span=0.3, color="black") +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", color="blue", size=1) +
scale_x_datetime(limits = ymd_h(c("2021-10-01 00", "2022-01-22 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("Oostende")
require(zoo)
nrow(table[mun,])
plot(rollmean(table[mun,]$Freq[-c(1:7,628:632)], k = 7, fill = NA), rollmean(table[mun,]$Freq[-c(621:632)], k = 7, fill = NA))
ggplot(table[1:620,], aes(rollmean(table[mun,]$Freq[-c(1:7,628:632)], k = 7, fill = NA), rollmean(table[mun,]$Freq[-c(621:632)], k = 7, fill = NA))) +
geom_point(color="dark grey") +
geom_path() +
xlab("new cases per day") +
ylab("new cases per day of previous week")
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
#xlim(500, 689) +
xlim(200, 100) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
#xlim(500, 689) +
xlim(200, 400) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
xlim(500, 689) +
#xlim(200, 400) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
xlim(650, 689) +
#xlim(200, 400) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
xlim(600, 689) +
#xlim(200, 400) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_AGEGROUP_pre<- xtabs(data$CASES ~ data$DATE+data$AGEGROUP)
table_AGEGROUP <- as.data.frame(table_AGEGROUP_pre)
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-27 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-26 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), log(Freq), color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-26 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), log(Freq), color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-27 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-27 23"))) +
xlab("date") +
ylab("new cases per day [log scale]") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-27 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per age class")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_MUNI.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
data$CASES[data$CASES == "<5"] <- 0
table_pre <- xtabs(as.numeric(data$CASES) ~ data$DATE + data$TX_DESCR_NL)
table <- as.data.frame(table_pre)
table_c <- as.data.frame(matrix(NA,703,582))
table_c[,1] <- as.POSIXct(table[(1+(1-1)*703):(1*703),1])
colnames(table_c) <- c("date", levels(table$data.TX_DESCR_NL))
for(i in 1:581){
table_c[,i+1] <- table[(1+(i-1)*699):(i*703),3]
}
sevend <- as.data.frame(matrix(NA,700,581))
for(i in 1:581){
for(j in 1:692){
sevend[j,i] <- mean(table_c[(j+1):(j+7),i+1])/mean(table_c[j:(j+6),i+1])
}
}
require(reshape)
index = 1:700
seveni <- cbind(index, sevend)
sd <- melt(seveni, id.vars='index', variable.name = 'series')
ggplot(sd, aes(index, value, col=variable)) +
geom_line() +
theme(legend.position = "none") +
ylim(0.8, 1.4) +
xlim(600, 693) +
#xlim(200, 400) +
xlab("days since start of the pandemic") +
ggtitle("Belgian municipalities") +
ylab("cases per day / cases the day before [7-day averages]")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_AGEGROUP_pre<- xtabs(data$CASES ~ data$DATE+data$AGEGROUP)
table_AGEGROUP <- as.data.frame(table_AGEGROUP_pre)
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-27 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), Freq, color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per age class")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_pre <- xtabs(data$CASES ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per age class")
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases per province")
table_pre <- xtabs(data$CASES ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
table_pre <- xtabs(data$CASES ~ data$DATE+data$PROVINCE)
table_pre <- xtabs(data$CASES ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_AGEGROUP_pre<- xtabs(data$CASES ~ data$DATE+data$AGEGROUP)
table_AGEGROUP <- as.data.frame(table_AGEGROUP_pre)
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), log(Freq), color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by age class")
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), log(Freq), color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by age class")
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-29 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom.line() +
#geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_line() +
#geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN_ICU ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN_ICU ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-03-01 00", "2022-02-01 23"))) +
xlab("date") +
ylab("total hospitalizations") +
ggtitle("total hospitalizations by region")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_AGEGROUP_pre<- xtabs(data$CASES ~ data$DATE+data$AGEGROUP)
table_AGEGROUP <- as.data.frame(table_AGEGROUP_pre)
ggplot(table_AGEGROUP, aes(as.POSIXct(data.DATE), log(Freq), color=data.AGEGROUP)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by age class")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_pre <- xtabs(data$CASES ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
table_pre <- xtabs(data$CASES ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2020-09-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
table_pre <- xtabs(data$CASES ~ data$DATE+data$PROVINCE)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), log(Freq), color=data.PROVINCE)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-01-30 23"))) +
xlab("date") +
ylab("new cases per day") +
ggtitle("cases by region")
data <- read.csv(url("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv"), header = TRUE, sep = ",", dec = ".", fill = TRUE, row.names=NULL)
table_pre <- xtabs(data$NEW_IN ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-02 23"))) +
xlab("date") +
ylab("new hospitalizations per day") +
ggtitle("new hospitalizations by region")
table_pre <- xtabs(data$TOTAL_IN_ICU ~ data$DATE+data$REGION)
table <- as.data.frame(table_pre)
ggplot(table, aes(as.POSIXct(data.DATE), Freq, color=data.REGION)) +
geom_ma(ma_fun = SMA, n = 7, linetype="solid", size=1) +
#geom_smooth(span=0.5, se=F) +
scale_x_datetime(limits = ymd_h(c("2021-11-01 00", "2022-02-02 23"))) +
xlab("date") +
ylab("total ICU occupations") +
ggtitle("total ICU occupations by region")
